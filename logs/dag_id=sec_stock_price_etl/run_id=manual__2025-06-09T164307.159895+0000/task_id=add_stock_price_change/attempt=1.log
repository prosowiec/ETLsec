{"timestamp":"2025-06-09T16:44:51.302508","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-09T16:44:51.302946","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fact_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-09T16:44:52.340697","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:54.934506Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:54.943280","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:55.070722Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:55.075809","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:55.235567Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:55.240832","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:55.475739Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:55.480571","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:56.002038Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:56.008890","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:56.136191Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:56.141605","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:56.958413Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:56.963268","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:57.075717Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:57.080653","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:57.269286Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:57.274388","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:57.398682Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:57.403490","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:57.527601Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:57.532450","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:57.655337Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:57.660219","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:57.788451Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:57.793247","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:57.906538Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:57.911671","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:58.170122Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:58.175868","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:58.323738Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:58.328402","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:58.471061Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:58.475515","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:58.613576Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:58.618157","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:58.765367Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:58.770007","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:58.941189Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:58.945738","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:59.105428Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:59.110404","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:59.275147Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:59.279871","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:59.418502Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:59.423126","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:59.589727Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:59.594262","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:59.745820Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:59.750688","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:44:59.894295Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:44:59.899509","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:00.038131Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:00.042651","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:00.185279Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:00.190075","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:00.336874Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:00.342348","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:00.504853Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:00.509484","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:00.653332Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:00.657659","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:00.801787Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:00.806380","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:00.942510Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:00.947101","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:01.112839Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:01.117804","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:01.285238Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:01.290370","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:01.468065Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:01.472908","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:01.628549Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:01.632923","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:01.790478Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:01.795451","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:01.938769Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:01.943150","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:02.089632Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.095189","level":"warning","event":"/opt/airflow/dags/stockPriceDim.py:8: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  stock_data = yf.download(ticker, start=start, end=end, interval=interval)\n","logger":"py.warnings"}
{"timestamp":"2025-06-09T16:45:02.247786Z","level":"error","event":"\r[*********************100%***********************]  1 of 1 completed","chan":"stderr","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.286161Z","level":"info","event":"        accessionNumber  ...                                            fileURL","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.286567Z","level":"info","event":"0  0001652044-25-000043  ...  https://www.sec.gov/Archives/edgar/data/000165...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.286833Z","level":"info","event":"1  0001652044-25-000014  ...  https://www.sec.gov/Archives/edgar/data/000165...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.287073Z","level":"info","event":"2  0001652044-24-000118  ...  https://www.sec.gov/Archives/edgar/data/000165...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.287470Z","level":"info","event":"3  0001652044-24-000079  ...  https://www.sec.gov/Archives/edgar/data/000165...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.287702Z","level":"info","event":"4  0001652044-24-000053  ...  https://www.sec.gov/Archives/edgar/data/000165...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.287877Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.288109Z","level":"info","event":"[5 rows x 18 columns]","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-09T16:45:02.286320","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
